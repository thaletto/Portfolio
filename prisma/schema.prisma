generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("NEXT_PUBLIC_POSTGRES_PRISMA_URL")
  directUrl = env("NEXT_PUBLIC_POSTGRES_URL_NON_POOLING")
}

model education {
  id          Int     @id @default(autoincrement())
  institution String  @db.VarChar(100)
  university  String  @db.VarChar(100)
  course      String  @db.VarChar(100)
  cgpa        String? @db.VarChar(10)
  location    String? @db.VarChar(100)
  start_year  Int?
  end_year    Int?
}

model experience {
  id         Int       @id @default(autoincrement())
  company    String    @db.VarChar(100)
  type       String    @db.VarChar(50)
  role       String    @db.VarChar(100)
  location   String?   @db.VarChar(100)
  start_date DateTime  @db.Date
  end_date   DateTime? @db.Date
}

model notes {
  note_id    Int       @id @default(autoincrement())
  project_id String?   @db.VarChar(10)
  note_text  String?
  projects   projects? @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model projects {
  id     String   @id @db.VarChar(10)
  name   String   @db.VarChar(100)
  date   String?  @db.VarChar(50)
  url    String?
  skills String[]
  notes  notes[]
}

model users {
  id            Int       @id @default(autoincrement())
  username      String    @unique @db.VarChar(50)
  email         String    @unique @db.VarChar(100)
  password_hash String
  created_at    DateTime? @default(now()) @db.Timestamptz(6)
  updated_at    DateTime? @default(now()) @db.Timestamptz(6)
}

model certificates {
  id       Int      @id @default(autoincrement())
  name     String   @db.VarChar(255)
  provider String   @db.VarChar(255)
  date     DateTime @db.Date
  url      String   @db.VarChar(255)
  skills   String[]
}
